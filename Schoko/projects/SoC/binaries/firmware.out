@00000000 0C002183 lw x3, 000000C0(x0)
@00000001 0C402103 lw x2, 000000C4(x0)
@00000002 00400413 addi x8, x0, 0x04       // Load scratch Rx-Byte-Available mask
@00000003 03300493 addi x9, x0, 0x33
@00000004 00918023 sb x9, 0x0(x3)          // Write 0x33 to port A to indicate ready
@00000005 0140036F jal x6, @PollRxAvail
@00000006 00114083 lbu x1, 0x1(x2)         // Read Rx reg at offset 0x01
@00000007 00118023 sb x1, 0x0(x3)          // Write it on port A
@00000008 FF5FF06F jal x0, @WaitForByte
@00000009 00100073 ebreak
@0000000A 00014083 lbu x1, 0x0(x2)         // Read Control reg at offset 0x0
@0000000B 0080F0B3 and x1, x1, x8          // Mask = 00000100
@0000000C FE141CE3 bne x8, x1, @PollRxAvail
@0000000D 00030067 jalr x0, 0x0(x6)        // return
@00000030 00400000 d: 00400000    // Base address of Port A
@00000031 00400100 d: 00400100    // Base address of UART IO
@00000032 0A0D6B4F d: 0A0D6B4F    // "Ok\r\n" + null
@00000033 00000000 d: 00000000    //
