@00000000 0C002183 lw x3, 000000C0(x0)
@00000001 0C402103 lw x2, 000000C4(x0)
@00000002 06000393 addi x7, x0, 0x60       // Set Exit signal
@00000003 0C800213 addi x4, x0, @String_OK    // Set pointer to String
@00000004 024002EF jal x5, @PrintString
@00000005 04C0036F jal x6, @PollRxAvail
@00000006 00114083 lbu x1, 0x1(x2)         // Read Rx reg
@00000007 00708663 beq x1, x7, @Exit       // Is it the "`" char = "0x60"
@00000008 00118023 sb x1, 0x0(x3)          // Display it on port A
@00000009 FF1FF06F jal x0, @WaitForByte
@0000000A 0E000213 addi x4, x0, @String_Bye
@0000000B 008002EF jal x5, @PrintString
@0000000C 00100073 ebreak
@0000000D 00024083 lbu x1, 0x0(x4)         // Load x1 to what x4 is pointing at
@0000000E 00008A63 beq x1, x0, @PSExit     // Is x1 a Null char
@0000000F 00110123 sb x1, 0x2(x2)          // Send
@00000010 0100036F jal x6, @PollTxBusy
@00000011 00120213 addi x4, x4, 1          // Next char
@00000012 FEDFF06F jal x0, @PrintString
@00000013 00028067 jalr x0, 0x0(x5)        // return
@00000014 00014083 lbu x1, 0x0(x2)         // Load UART Control reg
@00000015 0020F093 andi x1, x1, 0x02       // Mask = 00000010
@00000016 FE101CE3 bne x0, x1, @PollTxBusy
@00000017 00030067 jalr x0, 0x0(x6)        // return
@00000018 00014083 lbu x1, 0x0(x2)         // Load UART Control reg
@00000019 0040F093 andi x1, x1, 0x04       // Mask = 00000100
@0000001A FE101CE3 bne x0, x1, @PollRxAvail
@0000001B 00030067 jalr x0, 0x0(x6)        // return
@00000030 00400000 d: 00400000    // Base address of Port A
@00000031 00400100 d: 00400100    // Base address of UART IO
@00000032 0A0D6B4F d: 0A0D6B4F    // "Ok\r\n" + null
@00000033 00000000 d: 00000000    //
@00000034 0D656E4F d: 0D656E4F    // "One\r\n" + null
@00000035 0000000A d: 0000000A
@00000036 0D6E7754 d: 0D6E7754    // "Two\r\n" + null
@00000037 0000000A d: 0000000A
@00000038 0D657942 d: 0D657942    // "Bye\r\n" + null
@00000039 0000000A d: 0000000A
